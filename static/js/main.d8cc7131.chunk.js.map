{"version":3,"sources":["layout/Container/Container.tsx","layout/Header/Header.tsx","layout/Main/Main.tsx","layout/Footer/Footer.tsx","UI/Button/Button.tsx","assets/LocationIcon.svg","UI/Input/Input.tsx","reducers/city.ts","utils.ts","api/weather.ts","config.ts","reducers/weather.ts","api/city.ts","components/CityName/CityName.tsx","UI/Switch/Switch.tsx","reducers/options.ts","components/WeatherUnitToggler/WeatherUnitToggler.tsx","UI/Loader/Loader.tsx","components/WeatherInfo/WeatherInfo.tsx","components/ValueDisplay/ValueDisplay.tsx","components/DetailedWeatherInfo/DetailedWeatherInfo.tsx","App.tsx","store/index.ts","index.tsx"],"names":["Container","weatherType","children","className","classNames","Header","Main","Footer","Button","type","label","icon","rest","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","fillRule","clipRule","d","SvgLocationIcon","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","ForwardRef","Input","onConfirmClick","confirmDisabled","onKeyPress","e","disabled","onMouseDown","citySlice","createSlice","name","initialState","reducers","setCityName","state","action","payload","actions","formatEmptyValue","value","undefined","weatherAPI","getWeatherInfo","city","axios","get","params","process","then","response","data","fetchWeatherData","createAsyncThunk","a","rejectWithValue","info","temp","description","wind","pressure","humidity","rainChance","status","weatherSlice","setError","error","extraReducers","builder","addCase","pending","fulfilled","main","weather","clouds","currentWeather","all","rejected","cityAPI","getCityInfo","lat","lon","CityName","sentence","useState","isInputActive","setInputActive","cityName","useSelector","dispatch","useDispatch","onGeolocationClick","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","res","address","onInputBlur","onBlur","autoFocus","placeholder","onChange","split","map","word","toUpperCase","substr","join","onClick","Switch","items","currentValue","item","toString","checked","htmlFor","optionsSlice","measureUnits","toggleMeasureUnits","availableMeasureUnits","WeatherUnitToggler","measureUnit","options","LoaderSpinner","color","size","WeatherInfo","weatherInfo","displayedTemperature","temperature","toFixed","kelvin","convertKelvinToFahrenheit","convertTemperature","AnimatePresence","Loader","motion","div","initial","opacity","animate","exit","src","alt","ValueDisplay","DetailedWeatherInfo","hPa","angle","weatherValues","speed","deg","Math","round","weatherValue","App","iconId","Number","parseInt","store","configureStore","reducer","cityReducer","optionsReducer","weatherReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8cc7131.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./Container.scss\";\r\n\r\ninterface ContainerProps {\r\n    weatherType: \"BAD\" | \"GOOD\"\r\n}\r\n\r\nconst Container: React.FC<ContainerProps> = ({weatherType, children}) =>\r\n    <div className={classNames(\"container\", {\r\n            \"container_bad-weather\": weatherType === \"BAD\",\r\n            \"container_good-weather\": weatherType === \"GOOD\"\r\n        }\r\n    )}>\r\n        {children}\r\n    </div>;\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header: React.FC = ({children}) => <header className=\"header\">{children}</header>\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Main.scss\";\r\n\r\nconst Main: React.FC = ({children}) => <main className=\"main\">{children}</main>;\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport \"./Footer.scss\";\r\n\r\nconst Footer: React.FC = ({children}) => <footer className=\"footer\">{children}</footer>\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./Buttons.scss\";\r\n\r\ninterface ButtonProps extends React.HTMLProps<HTMLButtonElement> {\r\n    type?: \"outlined\",\r\n    label: string;\r\n    icon?: JSX.Element;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({type = \"default\", label, icon, ...rest}) =>\r\n    <button type=\"button\" {...rest} className={classNames(\"button\", {\r\n        \"button_outlined\": type === \"outlined\",\r\n        \"button_with-icon\": icon\r\n    })}>{icon}{label}</button>\r\n\r\nexport default Button;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M17.489 0.838191L0.238948 11.6268L8.72799 13.2769L13.2146 20.7637L17.489 0.838191Z\"\n});\n\nfunction SvgLocationIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 21,\n    viewBox: \"0 0 18 21\",\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLocationIcon);\nexport default __webpack_public_path__ + \"static/media/LocationIcon.0ef106bc.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport './Input.scss';\r\n\r\ninterface InputProps extends React.HTMLProps<HTMLInputElement> {\r\n    onConfirmClick: () => void;\r\n    confirmDisabled: boolean;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({onConfirmClick, confirmDisabled, ...rest}) => {\r\n    const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            onConfirmClick();\r\n        }\r\n    }\r\n\r\n    return <div className=\"input__container\">\r\n        <input className=\"input__field\" onKeyPress={handleKeyPress} {...rest} />\r\n        <button disabled={confirmDisabled} type=\"button\" className=\"input__confirm-button\" onMouseDown={onConfirmClick}>OK</button>\r\n    </div>\r\n}\r\n\r\nexport default Input;\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit'\r\n\r\nexport interface CityState {\r\n    name: string,\r\n}\r\n\r\nconst initialState: CityState = {\r\n    name: \"\"\r\n};\r\n\r\nexport const citySlice = createSlice({\r\n    name: 'city',\r\n    initialState,\r\n    reducers: {\r\n        setCityName: (state, action: PayloadAction<string>) => {\r\n            state.name = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {setCityName} = citySlice.actions;\r\n\r\nexport default citySlice.reducer;\r\n","export const convertKelvinToCelcius = (kelvin: number) => (kelvin - 273.15).toFixed(1);\r\n\r\nexport const convertKelvinToFahrenheit = (kelvin: number) => ((kelvin - 273.15) * 9 / 5 + 32).toFixed(1);\r\n\r\nexport const convertHPAtoMM = (hPa: number): string => (hPa / 1.333).toFixed(1);\r\n\r\nexport const getCardinalDirection = (angle: number): string => {\r\n    const directions = ['северный', 'северо-восточный', 'восточный', 'юго-восточный', 'южный', 'южно-западный', 'западный', 'западно-восточный'];\r\n    return directions[Math.round(angle / 45) % 8];\r\n}\r\n\r\nexport const capitalizeAllWords = (sentence: string): string => sentence.split(\" \").map(word => word[0].toUpperCase() + word.substr(1)).join(\" \");\r\n\r\nexport const formatEmptyValue = (value: string | number | undefined) => value === undefined ? \"--\" : value;\r\n\r\n","import axios from \"axios\";\r\nimport {WeatherObject} from \"../types\";\r\nimport {weatherAPIAddress} from \"../config\";\r\n\r\nconst weatherAPI = {\r\n    getWeatherInfo: (city: string): Promise<WeatherObject> => axios.get(weatherAPIAddress,\r\n        {\r\n            params: {\r\n                \"q\": city,\r\n                \"appid\": process.env.REACT_APP_WEATHER_API_KEY,\r\n                \"lang\": \"ru\"\r\n            }\r\n        }).then(response => response.data)\r\n};\r\n\r\nexport default weatherAPI;\r\n","export const weatherAPIAddress = \"https://api.openweathermap.org/data/2.5/weather\";\r\n\r\nexport const weatherIconAPIAddress = \"https://openweathermap.org/img/wn/\";\r\n\r\nexport const locationAPIAddress = \"https://us1.locationiq.com/v1/reverse.php\";\r\n","import {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit'\r\nimport weatherAPI from \"../api/weather\";\r\n\r\ninterface WindInfo {\r\n    speed: number,\r\n    deg: number\r\n}\r\n\r\nexport interface WeatherState {\r\n    info: {\r\n        temp?: number // In kalvin\r\n        description?: string,\r\n        wind?: WindInfo,\r\n        pressure?: number, // In hPa\r\n        humidity?: number, // In percentage\r\n        rainChance?: number,\r\n        icon?: string\r\n    },\r\n    status: \"idle\" | \"loading\" | \"succeed\" | \"rejected\",\r\n    error?: string\r\n}\r\n\r\nexport const fetchWeatherData = createAsyncThunk('weatherInfo/fetchWeatherData', async (city: string, {rejectWithValue}) => {\r\n    try {\r\n        return await weatherAPI.getWeatherInfo(city)\r\n    } catch (err) {\r\n        return rejectWithValue('Loading Error');\r\n    }\r\n});\r\n\r\n\r\nconst initialState: WeatherState = {\r\n    info: {\r\n        temp: undefined,\r\n        description: undefined,\r\n        wind: undefined,\r\n        pressure: undefined,\r\n        humidity: undefined,\r\n        rainChance: undefined,\r\n        icon: undefined\r\n    },\r\n    status: \"idle\"\r\n};\r\n\r\nexport const weatherSlice = createSlice({\r\n    name: 'weatherInfo',\r\n    initialState,\r\n    reducers: {\r\n        setError: (state, action: PayloadAction<string>) => {\r\n          state.error = action.payload;\r\n        }\r\n    },\r\n    extraReducers: builder => {\r\n        builder.addCase(fetchWeatherData.pending, (state) => {\r\n            state.status = \"loading\";\r\n            state.error = undefined;\r\n        }).addCase(fetchWeatherData.fulfilled, (state, action) => {\r\n            const {main, weather, wind, clouds} = action.payload;\r\n            const currentWeather = weather[0];\r\n            const {description, icon} = currentWeather;\r\n            const {temp, pressure, humidity} = main;\r\n\r\n            state.info.temp = temp;\r\n            state.info.description = description;\r\n            state.info.wind = wind;\r\n            state.info.pressure = pressure;\r\n            state.info.humidity = humidity;\r\n            state.info.rainChance = clouds.all;\r\n            state.info.icon = icon;\r\n\r\n            state.status = \"idle\"\r\n        }).addCase(fetchWeatherData.rejected, (state) => {\r\n            state.status = \"rejected\";\r\n            state.error = \"Ошибка загрузки\";\r\n\r\n            state.info.temp = undefined;\r\n            state.info.description = undefined;\r\n            state.info.wind = undefined;\r\n            state.info.pressure = undefined;\r\n            state.info.humidity = undefined;\r\n            state.info.rainChance = undefined;\r\n            state.info.icon = undefined;\r\n        });\r\n    }\r\n});\r\n\r\nexport const {setError} = weatherSlice.actions;\r\n\r\nexport default weatherSlice.reducer;\r\n","import axios from \"axios\";\r\nimport {LocationObject} from \"../types\";\r\nimport {locationAPIAddress} from \"../config\";\r\n\r\nconst cityAPI = {\r\n    getCityInfo: (lat: number, lon: number): Promise<LocationObject> => axios.get(locationAPIAddress, {\r\n        params: {\r\n            \"key\": process.env.REACT_APP_GOOGLE_API_KEY,\r\n            lat,\r\n            lon,\r\n            \"format\": \"json\",\r\n            \"accept-language\": \"ru\"\r\n        }\r\n    }).then(response => response.data)\r\n};\r\n\r\nexport default cityAPI;\r\n","import React, {useState} from 'react';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport {ReactComponent as LocationIcon} from \"../../assets/LocationIcon.svg\";\r\nimport {RootState} from \"../../store\";\r\nimport Input from \"../../UI/Input/Input\";\r\nimport \"./CityName.scss\";\r\nimport {setCityName} from \"../../reducers/city\";\r\nimport {capitalizeAllWords} from \"../../utils\";\r\nimport {fetchWeatherData, setError} from \"../../reducers/weather\";\r\nimport cityAPI from \"../../api/city\";\r\n\r\nconst CityName: React.FC = () => {\r\n    const [isInputActive, setInputActive] = useState<boolean>(false);\r\n\r\n    const cityName = useSelector((state: RootState) => state.city.name);\r\n    const toggleInputStatus = () => setInputActive(!isInputActive);\r\n    const dispatch = useDispatch();\r\n\r\n    const onConfirmClick = async () => {\r\n        setInputActive(false);\r\n        await dispatch(fetchWeatherData(cityName || \"\"));\r\n    }\r\n\r\n    const onGeolocationClick = async () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(async (value) => {\r\n                const res = await cityAPI.getCityInfo(value.coords.latitude, value.coords.longitude);\r\n                const {city} = res.address;\r\n                dispatch(setCityName(city));\r\n                await dispatch(fetchWeatherData(city));\r\n            });\r\n        } else {\r\n            dispatch(setError(\"Браузер не поддерживает геолокацию\"));\r\n        }\r\n    }\r\n\r\n    const onInputBlur = async () => {\r\n        setInputActive(false);\r\n        await dispatch(fetchWeatherData(cityName || \"\"));\r\n    }\r\n\r\n    return isInputActive ?\r\n        <Input onBlur={onInputBlur} autoFocus confirmDisabled={cityName.length === 0} onConfirmClick={onConfirmClick} value={cityName}\r\n               placeholder=\"Введите название города\"\r\n               onChange={(e: React.ChangeEvent<HTMLInputElement>) => dispatch(setCityName(e.target.value))}/> :\r\n        <div><h2 className=\"city-name__title\">{cityName ? capitalizeAllWords(cityName) : \"Выберите город\"}</h2>\r\n            <div className=\"city-name__container\">\r\n                <Button label=\"Сменить город\" onClick={toggleInputStatus}/>\r\n                <Button label=\"Моё местополжение\" icon={<LocationIcon/>} onClick={onGeolocationClick}/>\r\n            </div>\r\n        </div>\r\n}\r\n\r\nexport default CityName;\r\n","import React from 'react';\r\nimport \"./Switch.scss\";\r\n\r\ninterface SwitchProps {\r\n    items: Array<{ value: string | number | boolean, label: string }>;\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    currentValue: string | number | boolean;\r\n}\r\n\r\nconst Switch: React.FC<SwitchProps> = ({items, onChange, currentValue}) => <div className=\"switch__container\">\r\n    {items.map(item => <div className=\"switch__item\" key={item.value.toString()}>\r\n        <input value={item.value.toString()} onChange={onChange} type=\"radio\" name={item.value.toString()} id={item.value.toString()}\r\n               checked={item.value === currentValue}/>\r\n        <label htmlFor={item.value.toString()}>{item.label}</label>\r\n    </div>)}\r\n</div>\r\n\r\nexport default Switch;\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit'\r\n\r\nexport interface OptionsState {\r\n    measureUnits: \"celsius\" | \"fahrenheit\",\r\n}\r\n\r\nconst initialState: OptionsState = {\r\n    measureUnits: \"celsius\",\r\n};\r\n\r\nexport const optionsSlice = createSlice({\r\n    name: 'options',\r\n    initialState,\r\n    reducers: {\r\n        toggleMeasureUnits: (state, action: PayloadAction<\"celsius\" | \"fahrenheit\">) => {\r\n            state.measureUnits = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {toggleMeasureUnits} = optionsSlice.actions;\r\n\r\nexport default optionsSlice.reducer;\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Switch from \"../../UI/Switch/Switch\";\r\nimport {RootState} from \"../../store\";\r\nimport {toggleMeasureUnits} from \"../../reducers/options\";\r\nimport \"./WeatherUnitToggler.scss\";\r\n\r\nconst availableMeasureUnits = [{value: \"celsius\", label: \"C\"}, {value: \"fahrenheit\", label: \"F\"}];\r\n\r\nconst WeatherUnitToggler: React.FC = () => {\r\n    const measureUnit = useSelector((state: RootState) => state.options.measureUnits);\r\n    const dispatch = useDispatch();\r\n\r\n    const changeMeasureUnit = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(toggleMeasureUnits(e.target.value === \"celsius\" ? \"celsius\" : \"fahrenheit\"));\r\n    };\r\n\r\n    return <div className=\"weather-unit-toggler__container\"><span className=\"weather-unit-toggler__symbol\">°</span>\r\n        <Switch items={availableMeasureUnits} onChange={changeMeasureUnit} currentValue={measureUnit} />\r\n    </div>\r\n}\r\n\r\nexport default WeatherUnitToggler;\r\n","import React from \"react\";\r\nimport {PuffLoader} from \"react-spinners\";\r\n\r\nconst LoaderSpinner: React.FC = () => <PuffLoader color=\"#FFF\" size={150}/>;\r\n\r\nexport default LoaderSpinner;\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AnimatePresence, motion} from \"framer-motion\";\r\nimport {RootState} from \"../../store\";\r\nimport \"./WeatherInfo.scss\";\r\nimport {convertKelvinToCelcius, convertKelvinToFahrenheit} from \"../../utils\";\r\nimport LoaderSpinner from \"../../UI/Loader/Loader\";\r\nimport {weatherIconAPIAddress} from \"../../config\";\r\n\r\nconst WeatherInfo: React.FC = () => {\r\n    const weatherInfo = useSelector(((state: RootState) => state.weatherInfo));\r\n    const {temp, icon, description} = weatherInfo.info;\r\n    const {status, error} = weatherInfo;\r\n    const measureUnit = useSelector((state: RootState) => state.options.measureUnits);\r\n\r\n    // Convert Kelvin to Fahrenheit or Celsius with round to 1 decimal\r\n    const convertTemperature = (temperature: number): string => {\r\n        switch (measureUnit) {\r\n            case \"celsius\": {\r\n                return convertKelvinToCelcius(temperature);\r\n            }\r\n            case \"fahrenheit\": {\r\n                return convertKelvinToFahrenheit(temperature);\r\n            }\r\n            default: {\r\n                return temperature.toString();\r\n            }\r\n        }\r\n    }\r\n\r\n    const displayedTemperature = temp ? convertTemperature(temp) : \"--\";\r\n\r\n    return <div className=\"weather-info__container\">\r\n        <AnimatePresence>\r\n            {status === \"loading\" ? <LoaderSpinner/> : <>\r\n                <motion.div initial={{opacity: 0}}\r\n                            animate={{opacity: 1}}\r\n                            exit={{opacity: 0}}\r\n                            className=\"weather-info__value\">\r\n                    {icon ?\r\n                        <img className=\"weather-info__icon\" src={`${weatherIconAPIAddress}${icon}@4x.png`}\r\n                             alt=\"Weather icon\"/> : null}\r\n                    <h1>{displayedTemperature} °</h1>\r\n                </motion.div>\r\n                <span className=\"weather-info__type\">{description || \"Нет информации\"}</span></>}\r\n            {status === \"rejected\" && <motion.div initial={{opacity: 0}}\r\n                                                  animate={{opacity: 1}}\r\n                                                  exit={{opacity: 0}}\r\n                                                  className=\"weather-info__error\">{error}</motion.div>}\r\n        </AnimatePresence>\r\n    </div>\r\n}\r\n\r\nexport default WeatherInfo;\r\n","import React from \"react\";\r\nimport \"./ValueDisplay.scss\";\r\n\r\ninterface AdditionalWeatherInfoProps {\r\n    label: string,\r\n    value?: string\r\n}\r\n\r\nconst ValueDisplay: React.FC<AdditionalWeatherInfoProps> = ({label, value}) => <div className=\"value-display__container\">\r\n    <h3>{label}</h3>\r\n    <span className=\"value-display__value\">{value || \"--\"}</span>\r\n</div>;\r\n\r\nexport default ValueDisplay;\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport ValueDisplay from \"../ValueDisplay/ValueDisplay\";\r\nimport {RootState} from \"../../store\";\r\nimport {convertHPAtoMM, formatEmptyValue, getCardinalDirection} from \"../../utils\";\r\n\r\n\r\nconst DetailedWeatherInfo: React.FC = () => {\r\n    const weatherInfo = useSelector((state: RootState) => state.weatherInfo);\r\n\r\n    const {wind, pressure, humidity, rainChance} = weatherInfo.info;\r\n\r\n    const weatherValues: Array<{ label: string, value?: string }> = [{\r\n        label: \"Ветер\",\r\n        value: `${formatEmptyValue(wind?.speed)} м/с, ${wind?.deg ? getCardinalDirection(wind.deg) : \"\"}`\r\n    }, {\r\n        label: \"Давление\",\r\n        value: `${pressure ? (convertHPAtoMM(pressure)) : \"--\"} мм. рт. ст.`\r\n    }, {\r\n        label: \"Влажность\",\r\n        value: `${formatEmptyValue(humidity)}%`\r\n    }, {\r\n        label: \"Вероятность дождя\",\r\n        value: `${formatEmptyValue(rainChance)}%`\r\n    }];\r\n\r\n    return <>{weatherValues.map(weatherValue => <ValueDisplay key={weatherValue.label} label={weatherValue.label}\r\n                                                              value={weatherValue.value}/>)}</>\r\n}\r\n\r\n\r\nexport default DetailedWeatherInfo;\r\n","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport Container from \"./layout/Container/Container\";\r\nimport Header from \"./layout/Header/Header\";\r\nimport Main from \"./layout/Main/Main\";\r\nimport Footer from \"./layout/Footer/Footer\";\r\nimport CityName from \"./components/CityName/CityName\";\r\nimport WeatherUnitToggler from \"./components/WeatherUnitToggler/WeatherUnitToggler\";\r\nimport WeatherInfo from \"./components/WeatherInfo/WeatherInfo\";\r\nimport DetailedWeatherInfo from \"./components/DetailedWeatherInfo/DetailedWeatherInfo\";\r\nimport {RootState} from \"./store\";\r\n\r\nconst App: React.FC = () => {\r\n    const iconId = useSelector((state: RootState) => state.weatherInfo.info.icon);\r\n\r\n    const getWeatherType = () => iconId === undefined || Number.parseInt(iconId.split(\"d\")[0], 10) <= 9 ? \"GOOD\" : \"BAD\";\r\n\r\n    return (\r\n        <Container weatherType={getWeatherType()}>\r\n            <Header>\r\n                <CityName/>\r\n                <WeatherUnitToggler/>\r\n            </Header>\r\n            <Main>\r\n                <WeatherInfo/>\r\n            </Main>\r\n            <Footer>\r\n                <DetailedWeatherInfo/>\r\n            </Footer>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport cityReducer from \"../reducers/city\";\r\nimport optionsReducer from \"../reducers/options\";\r\nimport weatherReducer from \"../reducers/weather\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        city: cityReducer,\r\n        options: optionsReducer,\r\n        weatherInfo: weatherReducer\r\n    },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from \"react-redux\";\r\nimport App from './App';\r\nimport {store} from \"./store\";\r\nimport './styles/_reset.css';\r\nimport './styles/_global.scss';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}