{"version":3,"sources":["layout/Container/Container.tsx","layout/Header/Header.tsx","layout/Main/Main.tsx","layout/Footer/Footer.tsx","UI/Button/Button.tsx","assets/LocationIcon.svg","UI/Input/Input.tsx","reducers/city.ts","utils.ts","api/weather.ts","config.ts","reducers/weather.ts","api/city.ts","components/CityName/CityName.tsx","UI/Switch/Switch.tsx","reducers/options.ts","components/WeatherUnitToggler/WeatherUnitToggler.tsx","UI/Loader/Loader.tsx","components/WeatherInfo/WeatherInfo.tsx","components/ValueDisplay/ValueDisplay.tsx","components/DetailedWeatherInfo/DetailedWeatherInfo.tsx","App.tsx","store/index.ts","index.tsx"],"names":["Container","weatherType","children","className","classNames","Header","Main","Footer","Button","type","label","icon","rest","button_outlined","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","fillRule","clipRule","d","SvgLocationIcon","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","ForwardRef","Input","onConfirmClick","confirmDisabled","onKeyPress","e","disabled","onMouseDown","citySlice","createSlice","name","initialState","reducers","setCityName","state","action","payload","actions","formatEmptyValue","value","undefined","weatherAPI","getWeatherInfo","city","axios","get","params","q","appid","process","lang","then","response","data","fetchWeatherData","createAsyncThunk","a","rejectWithValue","info","temp","description","wind","pressure","humidity","rainChance","status","weatherSlice","setError","error","extraReducers","builder","addCase","pending","fulfilled","main","weather","clouds","currentWeather","all","rejected","cityAPI","getCityInfo","lat","lon","format","CityName","sentence","useState","isInputActive","setInputActive","cityName","useSelector","dispatch","useDispatch","onGeolocationClick","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","res","address","onInputBlur","onBlur","autoFocus","placeholder","onChange","split","map","word","toUpperCase","substr","join","onClick","Switch","items","currentValue","item","toString","checked","htmlFor","optionsSlice","measureUnits","toggleMeasureUnits","availableMeasureUnits","WeatherUnitToggler","measureUnit","options","LoaderSpinner","color","size","WeatherInfo","weatherInfo","displayedTemperature","temperature","toFixed","kelvin","convertKelvinToFahrenheit","convertTemperature","AnimatePresence","Loader","motion","div","initial","opacity","animate","exit","src","alt","ValueDisplay","DetailedWeatherInfo","hPa","angle","weatherValues","speed","deg","Math","round","weatherValue","App","iconId","Number","parseInt","store","configureStore","reducer","cityReducer","optionsReducer","weatherReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0e4b515.chunk.js","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./Container.scss\";\n\ninterface ContainerProps {\n  weatherType: \"BAD\" | \"GOOD\";\n}\n\nconst Container: React.FC<ContainerProps> = ({ weatherType, children }) => (\n  <div\n    className={classNames(\"container\", {\n      \"container_bad-weather\": weatherType === \"BAD\",\n      \"container_good-weather\": weatherType === \"GOOD\",\n    })}\n  >\n    {children}\n  </div>\n);\n\nexport default Container;\n","import React from \"react\";\nimport \"./Header.scss\";\n\nconst Header: React.FC = ({ children }) => (\n  <header className=\"header\">{children}</header>\n);\n\nexport default Header;\n","import React from \"react\";\nimport \"./Main.scss\";\n\nconst Main: React.FC = ({ children }) => (\n  <main className=\"main\">{children}</main>\n);\n\nexport default Main;\n","import React from \"react\";\nimport \"./Footer.scss\";\n\nconst Footer: React.FC = ({ children }) => (\n  <footer className=\"footer\">{children}</footer>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./Buttons.scss\";\n\ninterface ButtonProps extends React.HTMLProps<HTMLButtonElement> {\n  type?: \"outlined\";\n  label: string;\n  icon?: JSX.Element;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  type = \"default\",\n  label,\n  icon,\n  ...rest\n}) => (\n  <button\n    type=\"button\"\n    {...rest}\n    className={classNames(\"button\", {\n      button_outlined: type === \"outlined\",\n      \"button_with-icon\": icon,\n    })}\n  >\n    {icon}\n    {label}\n  </button>\n);\n\nexport default Button;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M17.489 0.838191L0.238948 11.6268L8.72799 13.2769L13.2146 20.7637L17.489 0.838191Z\"\n});\n\nfunction SvgLocationIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 21,\n    viewBox: \"0 0 18 21\",\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLocationIcon);\nexport default __webpack_public_path__ + \"static/media/LocationIcon.0ef106bc.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport \"./Input.scss\";\n\ninterface InputProps extends React.HTMLProps<HTMLInputElement> {\n  onConfirmClick: () => void;\n  confirmDisabled: boolean;\n}\n\nconst Input: React.FC<InputProps> = ({\n  onConfirmClick,\n  confirmDisabled,\n  ...rest\n}) => {\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      onConfirmClick();\n    }\n  };\n\n  return (\n    <div className=\"input__container\">\n      <input className=\"input__field\" onKeyPress={handleKeyPress} {...rest} />\n      <button\n        disabled={confirmDisabled}\n        type=\"button\"\n        className=\"input__confirm-button\"\n        onMouseDown={onConfirmClick}\n      >\n        OK\n      </button>\n    </div>\n  );\n};\n\nexport default Input;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface CityState {\n  name: string;\n}\n\nconst initialState: CityState = {\n  name: \"\",\n};\n\nexport const citySlice = createSlice({\n  name: \"city\",\n  initialState,\n  reducers: {\n    setCityName: (state, action: PayloadAction<string>) => {\n      state.name = action.payload;\n    },\n  },\n});\n\nexport const { setCityName } = citySlice.actions;\n\nexport default citySlice.reducer;\n","export const convertKelvinToCelcius = (kelvin: number): string =>\n  (kelvin - 273.15).toFixed(1);\n\nexport const convertKelvinToFahrenheit = (kelvin: number): string =>\n  (((kelvin - 273.15) * 9) / 5 + 32).toFixed(1);\n\nexport const convertHPAtoMM = (hPa: number): string => (hPa / 1.333).toFixed(1);\n\nexport const getCardinalDirection = (angle: number): string => {\n  const directions = [\n    \"северный\",\n    \"северо-восточный\",\n    \"восточный\",\n    \"юго-восточный\",\n    \"южный\",\n    \"южно-западный\",\n    \"западный\",\n    \"западно-восточный\",\n  ];\n  return directions[Math.round(angle / 45) % 8];\n};\n\nexport const capitalizeAllWords = (sentence: string): string =>\n  sentence\n    .split(\" \")\n    .map((word) => word[0].toUpperCase() + word.substr(1))\n    .join(\" \");\n\nexport const formatEmptyValue = (\n  value: string | number | undefined\n): string | number => (value === undefined ? \"--\" : value);\n","import axios from \"axios\";\nimport { WeatherObject } from \"../types\";\nimport { weatherAPIAddress } from \"../config\";\n\nconst weatherAPI = {\n  getWeatherInfo: (city: string): Promise<WeatherObject> =>\n    axios\n      .get(weatherAPIAddress, {\n        params: {\n          q: city,\n          appid: process.env.REACT_APP_WEATHER_API_KEY,\n          lang: \"ru\",\n        },\n      })\n      .then((response) => response.data),\n};\n\nexport default weatherAPI;\n","export const weatherAPIAddress =\n  \"https://api.openweathermap.org/data/2.5/weather\";\n\nexport const weatherIconAPIAddress = \"https://openweathermap.org/img/wn/\";\n\nexport const locationAPIAddress = \"https://us1.locationiq.com/v1/reverse.php\";\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport weatherAPI from \"../api/weather\";\n\ninterface WindInfo {\n  speed: number;\n  deg: number;\n}\n\nexport interface WeatherState {\n  info: {\n    temp?: number; // In kalvin\n    description?: string;\n    wind?: WindInfo;\n    pressure?: number; // In hPa\n    humidity?: number; // In percentage\n    rainChance?: number;\n    icon?: string;\n  };\n  status: \"idle\" | \"loading\" | \"succeed\" | \"rejected\";\n  error?: string;\n}\n\nexport const fetchWeatherData = createAsyncThunk(\n  \"weatherInfo/fetchWeatherData\",\n  async (city: string, { rejectWithValue }) => {\n    try {\n      return await weatherAPI.getWeatherInfo(city);\n    } catch (err) {\n      return rejectWithValue(\"Loading Error\");\n    }\n  }\n);\n\nconst initialState: WeatherState = {\n  info: {\n    temp: undefined,\n    description: undefined,\n    wind: undefined,\n    pressure: undefined,\n    humidity: undefined,\n    rainChance: undefined,\n    icon: undefined,\n  },\n  status: \"idle\",\n};\n\nexport const weatherSlice = createSlice({\n  name: \"weatherInfo\",\n  initialState,\n  reducers: {\n    setError: (state, action: PayloadAction<string>) => {\n      state.error = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchWeatherData.pending, (state) => {\n        state.status = \"loading\";\n        state.error = undefined;\n      })\n      .addCase(fetchWeatherData.fulfilled, (state, action) => {\n        const { main, weather, wind, clouds } = action.payload;\n        const currentWeather = weather[0];\n        const { description, icon } = currentWeather;\n        const { temp, pressure, humidity } = main;\n\n        state.info.temp = temp;\n        state.info.description = description;\n        state.info.wind = wind;\n        state.info.pressure = pressure;\n        state.info.humidity = humidity;\n        state.info.rainChance = clouds.all;\n        state.info.icon = icon;\n\n        state.status = \"idle\";\n      })\n      .addCase(fetchWeatherData.rejected, (state) => {\n        state.status = \"rejected\";\n        state.error = \"Ошибка загрузки\";\n\n        state.info.temp = undefined;\n        state.info.description = undefined;\n        state.info.wind = undefined;\n        state.info.pressure = undefined;\n        state.info.humidity = undefined;\n        state.info.rainChance = undefined;\n        state.info.icon = undefined;\n      });\n  },\n});\n\nexport const { setError } = weatherSlice.actions;\n\nexport default weatherSlice.reducer;\n","import axios from \"axios\";\nimport { LocationObject } from \"../types\";\nimport { locationAPIAddress } from \"../config\";\n\nconst cityAPI = {\n  getCityInfo: (lat: number, lon: number): Promise<LocationObject> =>\n    axios\n      .get(locationAPIAddress, {\n        params: {\n          key: process.env.REACT_APP_GOOGLE_API_KEY,\n          lat,\n          lon,\n          format: \"json\",\n          \"accept-language\": \"ru\",\n        },\n      })\n      .then((response) => response.data),\n};\n\nexport default cityAPI;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Button from \"../../UI/Button/Button\";\nimport { ReactComponent as LocationIcon } from \"../../assets/LocationIcon.svg\";\nimport { RootState } from \"../../store\";\nimport Input from \"../../UI/Input/Input\";\nimport \"./CityName.scss\";\nimport { setCityName } from \"../../reducers/city\";\nimport { capitalizeAllWords } from \"../../utils\";\nimport { fetchWeatherData, setError } from \"../../reducers/weather\";\nimport cityAPI from \"../../api/city\";\n\nconst CityName: React.FC = () => {\n  const [isInputActive, setInputActive] = useState<boolean>(false);\n\n  const cityName = useSelector((state: RootState) => state.city.name);\n  const toggleInputStatus = () => setInputActive(!isInputActive);\n  const dispatch = useDispatch();\n\n  const onConfirmClick = async () => {\n    setInputActive(false);\n    await dispatch(fetchWeatherData(cityName || \"\"));\n  };\n\n  const onGeolocationClick = async () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async (value) => {\n        const res = await cityAPI.getCityInfo(\n          value.coords.latitude,\n          value.coords.longitude\n        );\n        const { city } = res.address;\n        dispatch(setCityName(city));\n        await dispatch(fetchWeatherData(city));\n      });\n    } else {\n      dispatch(setError(\"Браузер не поддерживает геолокацию\"));\n    }\n  };\n\n  const onInputBlur = async () => {\n    setInputActive(false);\n    await dispatch(fetchWeatherData(cityName || \"\"));\n  };\n\n  return isInputActive ? (\n    <Input\n      onBlur={onInputBlur}\n      autoFocus\n      confirmDisabled={cityName.length === 0}\n      onConfirmClick={onConfirmClick}\n      value={cityName}\n      placeholder=\"Введите название города\"\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n        dispatch(setCityName(e.target.value))\n      }\n    />\n  ) : (\n    <div>\n      <h2 className=\"city-name__title\">\n        {cityName ? capitalizeAllWords(cityName) : \"Выберите город\"}\n      </h2>\n      <div className=\"city-name__container\">\n        <Button label=\"Сменить город\" onClick={toggleInputStatus} />\n        <Button\n          label=\"Моё местополжение\"\n          icon={<LocationIcon />}\n          onClick={onGeolocationClick}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CityName;\n","import React from \"react\";\nimport \"./Switch.scss\";\n\ninterface SwitchProps {\n  items: Array<{ value: string | number | boolean; label: string }>;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  currentValue: string | number | boolean;\n}\n\nconst Switch: React.FC<SwitchProps> = ({ items, onChange, currentValue }) => (\n  <div className=\"switch__container\">\n    {items.map((item) => (\n      <div className=\"switch__item\" key={item.value.toString()}>\n        <input\n          value={item.value.toString()}\n          onChange={onChange}\n          type=\"radio\"\n          name={item.value.toString()}\n          id={item.value.toString()}\n          checked={item.value === currentValue}\n        />\n        <label htmlFor={item.value.toString()}>{item.label}</label>\n      </div>\n    ))}\n  </div>\n);\n\nexport default Switch;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface OptionsState {\n  measureUnits: \"celsius\" | \"fahrenheit\";\n}\n\nconst initialState: OptionsState = {\n  measureUnits: \"celsius\",\n};\n\nexport const optionsSlice = createSlice({\n  name: \"options\",\n  initialState,\n  reducers: {\n    toggleMeasureUnits: (\n      state,\n      action: PayloadAction<\"celsius\" | \"fahrenheit\">\n    ) => {\n      state.measureUnits = action.payload;\n    },\n  },\n});\n\nexport const { toggleMeasureUnits } = optionsSlice.actions;\n\nexport default optionsSlice.reducer;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Switch from \"../../UI/Switch/Switch\";\nimport { RootState } from \"../../store\";\nimport { toggleMeasureUnits } from \"../../reducers/options\";\nimport \"./WeatherUnitToggler.scss\";\n\nconst availableMeasureUnits = [\n  { value: \"celsius\", label: \"C\" },\n  { value: \"fahrenheit\", label: \"F\" },\n];\n\nconst WeatherUnitToggler: React.FC = () => {\n  const measureUnit = useSelector(\n    (state: RootState) => state.options.measureUnits\n  );\n  const dispatch = useDispatch();\n\n  const changeMeasureUnit = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      toggleMeasureUnits(\n        e.target.value === \"celsius\" ? \"celsius\" : \"fahrenheit\"\n      )\n    );\n  };\n\n  return (\n    <div className=\"weather-unit-toggler__container\">\n      <span className=\"weather-unit-toggler__symbol\">°</span>\n      <Switch\n        items={availableMeasureUnits}\n        onChange={changeMeasureUnit}\n        currentValue={measureUnit}\n      />\n    </div>\n  );\n};\n\nexport default WeatherUnitToggler;\n","import React from \"react\";\nimport { PuffLoader } from \"react-spinners\";\n\nconst LoaderSpinner: React.FC = () => <PuffLoader color=\"#FFF\" size={150} />;\n\nexport default LoaderSpinner;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { RootState } from \"../../store\";\nimport \"./WeatherInfo.scss\";\nimport { convertKelvinToCelcius, convertKelvinToFahrenheit } from \"../../utils\";\nimport LoaderSpinner from \"../../UI/Loader/Loader\";\nimport { weatherIconAPIAddress } from \"../../config\";\n\nconst WeatherInfo: React.FC = () => {\n  const weatherInfo = useSelector((state: RootState) => state.weatherInfo);\n  const { temp, icon, description } = weatherInfo.info;\n  const { status, error } = weatherInfo;\n  const measureUnit = useSelector(\n    (state: RootState) => state.options.measureUnits\n  );\n\n  // Convert Kelvin to Fahrenheit or Celsius with round to 1 decimal\n  const convertTemperature = (temperature: number): string => {\n    switch (measureUnit) {\n      case \"celsius\": {\n        return convertKelvinToCelcius(temperature);\n      }\n      case \"fahrenheit\": {\n        return convertKelvinToFahrenheit(temperature);\n      }\n      default: {\n        return temperature.toString();\n      }\n    }\n  };\n\n  const displayedTemperature = temp ? convertTemperature(temp) : \"--\";\n\n  return (\n    <div className=\"weather-info__container\">\n      <AnimatePresence>\n        {status === \"loading\" ? (\n          <LoaderSpinner />\n        ) : (\n          <>\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"weather-info__value\"\n            >\n              {icon ? (\n                <img\n                  className=\"weather-info__icon\"\n                  src={`${weatherIconAPIAddress}${icon}@4x.png`}\n                  alt=\"Weather icon\"\n                />\n              ) : null}\n              <h1>{displayedTemperature} °</h1>\n            </motion.div>\n            <span className=\"weather-info__type\">\n              {description || \"Нет информации\"}\n            </span>\n          </>\n        )}\n        {status === \"rejected\" && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"weather-info__error\"\n          >\n            {error}\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default WeatherInfo;\n","import React from \"react\";\nimport \"./ValueDisplay.scss\";\n\ninterface AdditionalWeatherInfoProps {\n  label: string;\n  value?: string;\n}\n\nconst ValueDisplay: React.FC<AdditionalWeatherInfoProps> = ({\n  label,\n  value,\n}) => (\n  <div className=\"value-display__container\">\n    <h3>{label}</h3>\n    <span className=\"value-display__value\">{value || \"--\"}</span>\n  </div>\n);\n\nexport default ValueDisplay;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ValueDisplay from \"../ValueDisplay/ValueDisplay\";\nimport { RootState } from \"../../store\";\nimport {\n  convertHPAtoMM,\n  formatEmptyValue,\n  getCardinalDirection,\n} from \"../../utils\";\n\nconst DetailedWeatherInfo: React.FC = () => {\n  const weatherInfo = useSelector((state: RootState) => state.weatherInfo);\n\n  const { wind, pressure, humidity, rainChance } = weatherInfo.info;\n\n  const weatherValues: Array<{ label: string; value?: string }> = [\n    {\n      label: \"Ветер\",\n      value: `${formatEmptyValue(wind?.speed)} м/с, ${\n        wind?.deg ? getCardinalDirection(wind.deg) : \"\"\n      }`,\n    },\n    {\n      label: \"Давление\",\n      value: `${pressure ? convertHPAtoMM(pressure) : \"--\"} мм. рт. ст.`,\n    },\n    {\n      label: \"Влажность\",\n      value: `${formatEmptyValue(humidity)}%`,\n    },\n    {\n      label: \"Вероятность дождя\",\n      value: `${formatEmptyValue(rainChance)}%`,\n    },\n  ];\n\n  return (\n    <>\n      {weatherValues.map((weatherValue) => (\n        <ValueDisplay\n          key={weatherValue.label}\n          label={weatherValue.label}\n          value={weatherValue.value}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default DetailedWeatherInfo;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Container from \"./layout/Container/Container\";\nimport Header from \"./layout/Header/Header\";\nimport Main from \"./layout/Main/Main\";\nimport Footer from \"./layout/Footer/Footer\";\nimport CityName from \"./components/CityName/CityName\";\nimport WeatherUnitToggler from \"./components/WeatherUnitToggler/WeatherUnitToggler\";\nimport WeatherInfo from \"./components/WeatherInfo/WeatherInfo\";\nimport DetailedWeatherInfo from \"./components/DetailedWeatherInfo/DetailedWeatherInfo\";\nimport { RootState } from \"./store\";\n\nconst App: React.FC = () => {\n  const iconId = useSelector((state: RootState) => state.weatherInfo.info.icon);\n\n  const getWeatherType = () =>\n    iconId === undefined || Number.parseInt(iconId.split(\"d\")[0], 10) <= 9\n      ? \"GOOD\"\n      : \"BAD\";\n\n  return (\n    <Container weatherType={getWeatherType()}>\n      <Header>\n        <CityName />\n        <WeatherUnitToggler />\n      </Header>\n      <Main>\n        <WeatherInfo />\n      </Main>\n      <Footer>\n        <DetailedWeatherInfo />\n      </Footer>\n    </Container>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport cityReducer from \"../reducers/city\";\nimport optionsReducer from \"../reducers/options\";\nimport weatherReducer from \"../reducers/weather\";\n\nexport const store = configureStore({\n  reducer: {\n    city: cityReducer,\n    options: optionsReducer,\n    weatherInfo: weatherReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport { store } from \"./store\";\nimport \"./styles/_reset.css\";\nimport \"./styles/_global.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}